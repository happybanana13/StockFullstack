{"version":3,"sources":["components/row.js","components/home.js","components/view.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","maxWidth","position","left","div","backgroundColor","button","border","color","padding","textAlign","textDecoration","display","fontSize","margin","cursor","Row","company","onSave","showView","classes","TableRow","TableCell","component","scope","name","align","symbol","currency","stockExchange","to","className","onClick","Home","useState","companyList","setCompanyList","savedList","setSavedList","useEffect","fetchCompanies","a","axios","get","then","jsonResponse","data","fetchSavedCompanies","height","minHeight","pag","tab","h3","h1","React","page","setPage","saveCompany","post","headers","previousSavedList","TableContainer","Paper","Table","aria-label","TableHead","style","TableBody","slice","map","find","savedCompany","TablePagination","rowsPerPageOptions","count","length","onChangePage","event","newPage","rowsPerPage","View","deleteCompany","delete","previousCompanyList","filter","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7149448e.chunk.js","sourcesContent":["/* eslint-disable spaced-comment */\r\nimport { Link } from 'react-router-dom';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//CSS\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n    maxWidth: 1000,\r\n    position: 'relative',\r\n    left: 450\r\n  },\r\n  div: {\r\n    backgroundColor: ' #555555'\r\n  },\r\n  button: {\r\n    backgroundColor: ' #555555',\r\n    border: 'none',\r\n    color: 'white',\r\n    padding: '15px 32px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    display: 'inline-block',\r\n    fontSize: '16px',\r\n    margin: '4px 2px',\r\n    cursor: 'pointer'\r\n  }\r\n});\r\n\r\nconst Row = ({ company, onSave, showView }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableRow key={company.symbol}>\r\n      <TableCell component='th' scope='row'>\r\n        <p>{company.name}</p>\r\n      </TableCell>\r\n      <TableCell align='right'>\r\n        <p>{company.symbol}</p>\r\n      </TableCell>\r\n      <TableCell align='right'>\r\n        <p>{company.currency}</p>\r\n      </TableCell>\r\n      <TableCell align='right'>\r\n        <p>{company.stockExchange}</p>\r\n      </TableCell>\r\n      <TableCell align='right'>\r\n        {showView ? (\r\n          <Link to='/view'>\r\n            <button className={classes.button}>View</button>\r\n          </Link>\r\n        ) : (\r\n          <button\r\n            className={classes.button}\r\n            onClick={() => {\r\n              onSave(company);\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","/* eslint-disable spaced-comment */\r\n/* eslint-disable prettier/prettier */\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from './row';\r\n\r\nexport const Home = () => {\r\n  // eslint-disable-next-line no-unused-vars\r\n\r\n  //States\r\n  const [companyList, setCompanyList] = useState([]);\r\n  const [savedList, setSavedList] = useState([]);\r\n  //Fetch api which have search query, setting intital state from those\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      await axios\r\n        .get('https://financialmodelingprep.com/api/v3/search?query=A&limit=100&exchange=NASDAQ&apikey=demo')\r\n        .then((jsonResponse) => setCompanyList(jsonResponse.data));\r\n    };\r\n    const fetchSavedCompanies = async () => {\r\n      await axios.get('/api/db').then((jsonResponse) => setSavedList(jsonResponse.data.data));\r\n    };\r\n    fetchCompanies();\r\n    fetchSavedCompanies();\r\n  }, []);\r\n  //CSS\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n      maxWidth: 1000,\r\n      position: 'relative',\r\n      left: 450,\r\n      backgroundColor: '#e6e6e6'\r\n    },\r\n    div: {\r\n      backgroundColor: '#f2f2f2',\r\n      height: '100vh',\r\n      minHeight: '100vh'\r\n    },\r\n    pag: {\r\n      minWidth: 650,\r\n      maxWidth: 1000,\r\n      position: 'relative',\r\n      left: 450\r\n    },\r\n    tab: {\r\n      backgroundColor: '#f2f2f2'\r\n    },\r\n    h3: {\r\n      backgroundColor: ' #555555',\r\n      border: 'none',\r\n      color: 'white',\r\n      padding: '15px 32px',\r\n      textAlign: 'center',\r\n      textDecoration: 'none',\r\n      display: 'inline-block',\r\n      fontSize: '16px',\r\n      margin: '4px 2px',\r\n      cursor: 'pointer',\r\n      position: 'relative',\r\n      left: '20px'\r\n    },\r\n    h1: {\r\n      fontSize: '80px'\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n  //Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const rowsPerPage = 5;\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  //Updating DB by clicking save button\r\n  const saveCompany = async (company) => {\r\n    await axios.post('/api/', company, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    setSavedList((previousSavedList) => [...previousSavedList, company]);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.div}>\r\n      <div>\r\n        <h1 className={classes.h1} align='center'>\r\n          Home Page\r\n        </h1>\r\n        <Link to='/View'>\r\n          <h3 className={classes.h3}>View Page</h3>\r\n        </Link>\r\n      </div>\r\n      <TableContainer className={classes.tab} component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ fontSize: '20px' }}>Company Name</TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Stock Symbol\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Currency\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Stock Exchange\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Save Data\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {companyList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((company) => (\r\n              <Row\r\n                key={company.symbol}\r\n                company={company}\r\n                onSave={saveCompany}\r\n                showView={!!savedList.find((savedCompany) => savedCompany.symbol === company.symbol)}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          className={classes.pag}\r\n          rowsPerPageOptions={[5]}\r\n          count={companyList.length}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={rowsPerPage}\r\n        />\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable spaced-comment */\r\n/* eslint-disable prettier/prettier */\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const View = () => {\r\n  const [companyList, setCompanyList] = useState([]);\r\n  //Setting initial state, which is an api which stores the db values\r\n  useEffect(() => {\r\n    const fetchCompanies = async () => {\r\n      await axios.get('/api/db').then((jsonResponse) => setCompanyList(jsonResponse.data.data));\r\n    };\r\n    fetchCompanies();\r\n  }, []);\r\n  //CSS\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n      maxWidth: 1000,\r\n      position: 'relative',\r\n      left: 450,\r\n      backgroundColor: '#e6e6e6'\r\n    },\r\n    div: {\r\n      backgroundColor: '#f2f2f2',\r\n      height: '100vh',\r\n      minHeight: '100vh'\r\n    },\r\n    pag: {\r\n      minWidth: 650,\r\n      maxWidth: 1000,\r\n      position: 'relative',\r\n      left: 450\r\n    },\r\n    tab: {\r\n      backgroundColor: '#f2f2f2'\r\n    },\r\n    h3: {\r\n      backgroundColor: ' #555555',\r\n      border: 'none',\r\n      color: 'white',\r\n      padding: '15px 32px',\r\n      textAlign: 'center',\r\n      textDecoration: 'none',\r\n      display: 'inline-block',\r\n      fontSize: '16px',\r\n      margin: '4px 2px',\r\n      cursor: 'pointer',\r\n      position: 'relative',\r\n      left: '20px'\r\n    },\r\n    h1: {\r\n      fontSize: '80px'\r\n    },\r\n    button: {\r\n      backgroundColor: ' #555555',\r\n      border: 'none',\r\n      color: 'white',\r\n      padding: '15px 32px',\r\n      textAlign: 'center',\r\n      textDecoration: 'none',\r\n      display: 'inline-block',\r\n      fontSize: '16px',\r\n      margin: '4px 2px',\r\n      cursor: 'pointer'\r\n    }\r\n  });\r\n  //Calling Delete API\r\n  const deleteCompany = async (company) => {\r\n    await axios.delete('/api/db', {\r\n      data: company\r\n    });\r\n    setCompanyList((previousCompanyList) => previousCompanyList.filter((savedCompany) => savedCompany !== company));\r\n  };\r\n\r\n  const classes = useStyles();\r\n  //Pagination\r\n  const [page, setPage] = React.useState(0);\r\n  const rowsPerPage = 5;\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.div}>\r\n      <div>\r\n        <h1 className={classes.h1} align='center'>\r\n          View Page\r\n        </h1>\r\n        <Link to='/home'>\r\n          <h3 className={classes.h3}>Home Page</h3>\r\n        </Link>\r\n      </div>\r\n      <TableContainer className={classes.tab} component={Paper}>\r\n        <Table className={classes.table} aria-label='simple table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ fontSize: '20px' }}>Company Name</TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Stock Symbol\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Currency\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Stock Exchange\r\n              </TableCell>\r\n              <TableCell style={{ fontSize: '20px' }} align='right'>\r\n                Save Data\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {companyList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((company) => (\r\n              <TableRow key={company.symbol}>\r\n                <TableCell component='th' scope='row'>\r\n                  <p>{company.name}</p>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  <p>{company.symbol}</p>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  <p>{company.currency}</p>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  <p>{company.stockExchange}</p>\r\n                </TableCell>\r\n                <TableCell align='right'>\r\n                  <button\r\n                    className={classes.button}\r\n                    onClick={() => {\r\n                      deleteCompany(company);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          className={classes.pag}\r\n          rowsPerPageOptions={[5]}\r\n          count={companyList.length}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={rowsPerPage}\r\n        />\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Home } from './components/home';\nimport { View } from './components/view';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Switch>\n          <Route path='/home' component={Home} />\n          <Route path='/view' component={View} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}